# Generated by Django 3.2.7 on 2021-11-05 18:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('max_occupants', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassroomTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('tag', models.CharField(max_length=256)),
                ('tag_category', models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], default='other', max_length=128)),
                ('classrooms', models.ManyToManyField(blank=True, related_name='tags', to='esp.Classroom')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=2048, verbose_name='Class title')),
                ('display_id', models.BigIntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(help_text='A description of the class that will be shown to students.')),
                ('max_section_size', models.IntegerField(verbose_name='How many students can a single section include?')),
                ('max_sections', models.IntegerField(default=1, verbose_name='How many enrollment sections are you willing to teach?')),
                ('time_slots_per_session', models.IntegerField(default=2, verbose_name='How many time slots is each session of the class?')),
                ('number_of_weeks', models.IntegerField(default=1, verbose_name='How many weeks will this class last?')),
                ('sessions_per_week', models.IntegerField(default=1, help_text='If you would like to meet multiple times per week, please describe why in the comments.', verbose_name='How often will this class meet per week?')),
                ('prerequisites', models.TextField(blank=True, default='None', help_text='Describe the recommended prerequisites for this class.')),
                ('min_grade_level', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th'), (5, '5th'), (6, '6th'), (7, '7th'), (8, '8th'), (9, '9th'), (10, '10th'), (11, '11th'), (12, '12th')], default=7)),
                ('max_grade_level', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th'), (5, '5th'), (6, '6th'), (7, '7th'), (8, '8th'), (9, '9th'), (10, '10th'), (11, '11th'), (12, '12th')], default=12)),
                ('difficulty', models.IntegerField(choices=[(1, 'Easy'), (2, 'Moderate'), (3, 'Challenging')], default=1)),
                ('status', models.CharField(choices=[('unreviewed', 'Unreviewed'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('hidden', 'Hidden')], default='unreviewed', max_length=32)),
                ('teacher_notes', models.TextField(blank=True, help_text='Notes for admin review - leave blank if none', null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('planned_purchases', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseSection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('display_id', models.IntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sections', to='esp.course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=512)),
                ('program_type', models.CharField(blank=True, choices=[('splash', 'Splash'), ('spark', 'Spark'), ('hssp', 'HSSP'), ('cascade', 'Cascade')], max_length=128, null=True)),
                ('min_grade_level', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th'), (5, '5th'), (6, '6th'), (7, '7th'), (8, '8th'), (9, '9th'), (10, '10th'), (11, '11th'), (12, '12th')], default=7)),
                ('max_grade_level', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th'), (5, '5th'), (6, '6th'), (7, '7th'), (8, '8th'), (9, '9th'), (10, '10th'), (11, '11th'), (12, '12th')], default=12)),
                ('description', models.TextField(null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('number_of_weeks', models.IntegerField()),
                ('time_block_minutes', models.IntegerField(default=30)),
                ('archive_on', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('saved_as_preset', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramRegistration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('allow_early_registration_after', models.DateTimeField(null=True)),
                ('allow_late_registration_until', models.DateTimeField(null=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registrations', to='esp.program')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('program_id', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='time_slots', to='esp.program')),
            ],
            options={
                'ordering': ['start_datetime'],
                'abstract': False,
                'unique_together': {('program_id', 'start_datetime')},
            },
        ),
        migrations.CreateModel(
            name='TeacherRegistration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('allow_early_registration_after', models.DateTimeField(null=True)),
                ('allow_late_registration_until', models.DateTimeField(null=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teacher_registrations', to='esp.program')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teacher_registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('program_id', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='TeacherProgramRegistrationStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('step_key', models.CharField(choices=[('teacher_verify_profile', 'Verify Profile'), ('teacher_submit_waiver', 'Submit Waivers'), ('teacher_minors_policy', 'Submit Minors Policy Acknowledgement'), ('teacher_time_availability', 'Time Availability'), ('teacher_submit_courses', 'Submit Courses'), ('teacher_confirm_course_schedule', 'Confirm Course Schedule')], max_length=128)),
                ('display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('access_start_date', models.DateTimeField()),
                ('access_end_date', models.DateTimeField()),
                ('required_for_next_step', models.BooleanField(default=True)),
                ('display_after_completion', models.BooleanField(default=True)),
                ('allow_changes_after_completion', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teacher_registration_steps', to='esp.program')),
            ],
            options={
                'abstract': False,
                'order_with_respect_to': 'program',
                'unique_together': {('program_id', 'step_key')},
            },
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('mit_affiliation', models.CharField(choices=[('undergrad', 'Undergraduate Student'), ('grad', 'Graduate Student'), ('postdoc', 'Postdoctoral Student'), ('other', 'Other'), ('', 'None')], max_length=32, verbose_name='What is your affiliation with MIT?')),
                ('major', models.CharField(blank=True, help_text='If you are currently a student, please provide your major or degree field.', max_length=128, null=True)),
                ('graduation_year', models.CharField(blank=True, help_text='If you are currently a student, please provide your graduation year.', max_length=4, null=True)),
                ('university_or_employer', models.CharField(blank=True, help_text='If you are not affiliated with MIT, please provide your university or employer.', max_length=128, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('shirt_size', models.CharField(choices=[('XXS', 'XXS'), ('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], max_length=3)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TeacherAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='availabilities', to='esp.teacherregistration')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teacher_availabilities', to='esp.timeslot')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('address_street', models.CharField(max_length=512)),
                ('address_city', models.CharField(max_length=512)),
                ('address_state', models.CharField(choices=[('AK', 'Alaska'), ('AL', 'Alabama'), ('AR', 'Arkansas'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'Washington D.C.'), ('DE', 'Delaware'), ('FL', 'Florida'), ('FM', 'Federated States Of Micronesia'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('IA', 'Iowa'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('MA', 'Massachusetts'), ('MD', 'Maryland'), ('ME', 'Maine'), ('MH', 'Marshall Islands'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MO', 'Missouri'), ('MP', 'Northern Mariana Islands'), ('MS', 'Mississippi'), ('MT', 'Montana'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NE', 'Nebraska'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NV', 'Nevada'), ('NY', 'New York'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('PW', 'Palau'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VA', 'Virginia'), ('VI', 'U.S. Virgin Islands'), ('VT', 'Vermont'), ('WA', 'Washington'), ('WI', 'Wisconsin'), ('WV', 'West Virginia'), ('WY', 'Wyoming')], max_length=16)),
                ('address_zip', models.CharField(max_length=10)),
                ('home_phone', models.CharField(max_length=16)),
                ('cell_phone', models.CharField(blank=True, max_length=16, null=True)),
                ('dob', models.DateField()),
                ('graduation_year', models.CharField(max_length=4)),
                ('school', models.CharField(max_length=512)),
                ('heard_about_esp_via', models.CharField(choices=[('teacher', 'Teacher or Counselor'), ('esp_rep', 'ESP representative visited my school'), ('parents', 'Parents'), ('friends', 'Friends'), ('poster_at_school', 'Poster At School'), ('poster_public', 'Poster in some other public place'), ('facebook', 'Facebook'), ('newspaper', 'Newspaper or Magazine'), ('radio_tv', 'Radio or TV'), ('attended_other_program', 'I attended another ESP program'), ('attended_last_year', 'I came to this program last year'), ('other', 'Other')], help_text="If you select 'Other', please provide detail in the text box.", max_length=32, verbose_name='How did you hear about this program?')),
                ('heard_about_esp_other_detail', models.CharField(blank=True, max_length=1024, null=True)),
                ('guardian_first_name', models.CharField(max_length=128)),
                ('guardian_last_name', models.CharField(max_length=128)),
                ('guardian_email', models.EmailField(max_length=254)),
                ('guardian_home_phone', models.CharField(max_length=16)),
                ('guardian_cell_phone', models.CharField(blank=True, max_length=16, null=True)),
                ('emergency_contact_first_name', models.CharField(max_length=128)),
                ('emergency_contact_last_name', models.CharField(max_length=128)),
                ('emergency_contact_email', models.EmailField(max_length=254)),
                ('emergency_contact_address_street', models.CharField(max_length=512)),
                ('emergency_contact_address_city', models.CharField(max_length=512)),
                ('emergency_contact_address_state', models.CharField(choices=[('AK', 'Alaska'), ('AL', 'Alabama'), ('AR', 'Arkansas'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'Washington D.C.'), ('DE', 'Delaware'), ('FL', 'Florida'), ('FM', 'Federated States Of Micronesia'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('IA', 'Iowa'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('MA', 'Massachusetts'), ('MD', 'Maryland'), ('ME', 'Maine'), ('MH', 'Marshall Islands'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MO', 'Missouri'), ('MP', 'Northern Mariana Islands'), ('MS', 'Mississippi'), ('MT', 'Montana'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NE', 'Nebraska'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NV', 'Nevada'), ('NY', 'New York'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('PW', 'Palau'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VA', 'Virginia'), ('VI', 'U.S. Virgin Islands'), ('VT', 'Vermont'), ('WA', 'Washington'), ('WI', 'Wisconsin'), ('WV', 'West Virginia'), ('WY', 'Wyoming')], max_length=16)),
                ('emergency_contact_address_zip', models.CharField(max_length=10)),
                ('emergency_contact_home_phone', models.CharField(max_length=16)),
                ('emergency_contact_cell_phone', models.CharField(blank=True, max_length=16, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='availabilities', to='esp.programregistration')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='student_availabilities', to='esp.timeslot')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('tag', models.CharField(max_length=256)),
                ('tag_category', models.CharField(choices=[('other', 'Other')], default='other', max_length=128)),
                ('programs', models.ManyToManyField(blank=True, related_name='tags', to='esp.Program')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=256)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stages', to='esp.program')),
            ],
            options={
                'abstract': False,
                'order_with_respect_to': 'program',
            },
        ),
        migrations.CreateModel(
            name='ProgramRegistrationStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('step_key', models.CharField(choices=[('verify_profile', 'Verify Profile Information'), ('submit_waivers', 'Submit Waivers'), ('time_availability', 'Time Availability'), ('lottery_preferences', 'Lottery Preferences'), ('submit_registration', 'Submit Registration'), ('view_assigned_courses', 'Confirm Assigned Courses'), ('edit_assigned_courses', 'Edit Assigned Courses'), ('pay_program_fees', 'Payment'), ('complete_surveys', 'Complete Surveys')], max_length=256)),
                ('required_for_stage_completion', models.BooleanField(default=True)),
                ('display_after_completion', models.BooleanField(default=True)),
                ('allow_changes_after_completion', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('program_stage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='steps', to='esp.programstage')),
            ],
            options={
                'abstract': False,
                'unique_together': {('program_stage_id', 'step_key')},
            },
        ),
        migrations.AddField(
            model_name='program',
            name='program_configuration',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='esp.programconfiguration'),
        ),
        migrations.CreateModel(
            name='PreferenceEntryRound',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('title', models.CharField(blank=True, max_length=512, null=True)),
                ('help_text', models.TextField()),
                ('group_sections_by_course', models.BooleanField(default=False)),
                ('applied_category_filter', models.CharField(blank=True, max_length=512, null=True)),
                ('program_configuration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rounds', to='esp.programconfiguration')),
            ],
            options={
                'abstract': False,
                'order_with_respect_to': 'program_configuration_id',
            },
        ),
        migrations.CreateModel(
            name='PreferenceEntryCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('tag', models.CharField(max_length=512)),
                ('pre_add_display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('post_add_display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('help_text', models.TextField()),
                ('max_count', models.IntegerField(blank=True, null=True)),
                ('min_count', models.IntegerField(blank=True, null=True)),
                ('has_integer_value', models.BooleanField(default=False)),
                ('max_value', models.IntegerField(blank=True, null=True)),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('max_value_sum', models.IntegerField(blank=True, null=True)),
                ('min_value_sum', models.IntegerField(blank=True, null=True)),
                ('preference_entry_round', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='categories', to='esp.preferenceentryround')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalTimeSlot',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.program')),
            ],
            options={
                'verbose_name': 'historical time slot',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTeacherRegistration',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('allow_early_registration_after', models.DateTimeField(null=True)),
                ('allow_late_registration_until', models.DateTimeField(null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.program')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical teacher registration',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTeacherProgramRegistrationStep',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('step_key', models.CharField(choices=[('teacher_verify_profile', 'Verify Profile'), ('teacher_submit_waiver', 'Submit Waivers'), ('teacher_minors_policy', 'Submit Minors Policy Acknowledgement'), ('teacher_time_availability', 'Time Availability'), ('teacher_submit_courses', 'Submit Courses'), ('teacher_confirm_course_schedule', 'Confirm Course Schedule')], max_length=128)),
                ('display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('access_start_date', models.DateTimeField()),
                ('access_end_date', models.DateTimeField()),
                ('required_for_next_step', models.BooleanField(default=True)),
                ('display_after_completion', models.BooleanField(default=True)),
                ('allow_changes_after_completion', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('_order', models.IntegerField(editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.program')),
            ],
            options={
                'verbose_name': 'historical teacher program registration step',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTeacherProfile',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('mit_affiliation', models.CharField(choices=[('undergrad', 'Undergraduate Student'), ('grad', 'Graduate Student'), ('postdoc', 'Postdoctoral Student'), ('other', 'Other'), ('', 'None')], max_length=32, verbose_name='What is your affiliation with MIT?')),
                ('major', models.CharField(blank=True, help_text='If you are currently a student, please provide your major or degree field.', max_length=128, null=True)),
                ('graduation_year', models.CharField(blank=True, help_text='If you are currently a student, please provide your graduation year.', max_length=4, null=True)),
                ('university_or_employer', models.CharField(blank=True, help_text='If you are not affiliated with MIT, please provide your university or employer.', max_length=128, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('shirt_size', models.CharField(choices=[('XXS', 'XXS'), ('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], max_length=3)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical teacher profile',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTeacherAvailability',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.teacherregistration')),
                ('time_slot', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.timeslot')),
            ],
            options={
                'verbose_name': 'historical teacher availability',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStudentProfile',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('address_street', models.CharField(max_length=512)),
                ('address_city', models.CharField(max_length=512)),
                ('address_state', models.CharField(choices=[('AK', 'Alaska'), ('AL', 'Alabama'), ('AR', 'Arkansas'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'Washington D.C.'), ('DE', 'Delaware'), ('FL', 'Florida'), ('FM', 'Federated States Of Micronesia'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('IA', 'Iowa'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('MA', 'Massachusetts'), ('MD', 'Maryland'), ('ME', 'Maine'), ('MH', 'Marshall Islands'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MO', 'Missouri'), ('MP', 'Northern Mariana Islands'), ('MS', 'Mississippi'), ('MT', 'Montana'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NE', 'Nebraska'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NV', 'Nevada'), ('NY', 'New York'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('PW', 'Palau'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VA', 'Virginia'), ('VI', 'U.S. Virgin Islands'), ('VT', 'Vermont'), ('WA', 'Washington'), ('WI', 'Wisconsin'), ('WV', 'West Virginia'), ('WY', 'Wyoming')], max_length=16)),
                ('address_zip', models.CharField(max_length=10)),
                ('home_phone', models.CharField(max_length=16)),
                ('cell_phone', models.CharField(blank=True, max_length=16, null=True)),
                ('dob', models.DateField()),
                ('graduation_year', models.CharField(max_length=4)),
                ('school', models.CharField(max_length=512)),
                ('heard_about_esp_via', models.CharField(choices=[('teacher', 'Teacher or Counselor'), ('esp_rep', 'ESP representative visited my school'), ('parents', 'Parents'), ('friends', 'Friends'), ('poster_at_school', 'Poster At School'), ('poster_public', 'Poster in some other public place'), ('facebook', 'Facebook'), ('newspaper', 'Newspaper or Magazine'), ('radio_tv', 'Radio or TV'), ('attended_other_program', 'I attended another ESP program'), ('attended_last_year', 'I came to this program last year'), ('other', 'Other')], help_text="If you select 'Other', please provide detail in the text box.", max_length=32, verbose_name='How did you hear about this program?')),
                ('heard_about_esp_other_detail', models.CharField(blank=True, max_length=1024, null=True)),
                ('guardian_first_name', models.CharField(max_length=128)),
                ('guardian_last_name', models.CharField(max_length=128)),
                ('guardian_email', models.EmailField(max_length=254)),
                ('guardian_home_phone', models.CharField(max_length=16)),
                ('guardian_cell_phone', models.CharField(blank=True, max_length=16, null=True)),
                ('emergency_contact_first_name', models.CharField(max_length=128)),
                ('emergency_contact_last_name', models.CharField(max_length=128)),
                ('emergency_contact_email', models.EmailField(max_length=254)),
                ('emergency_contact_address_street', models.CharField(max_length=512)),
                ('emergency_contact_address_city', models.CharField(max_length=512)),
                ('emergency_contact_address_state', models.CharField(choices=[('AK', 'Alaska'), ('AL', 'Alabama'), ('AR', 'Arkansas'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DC', 'Washington D.C.'), ('DE', 'Delaware'), ('FL', 'Florida'), ('FM', 'Federated States Of Micronesia'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('IA', 'Iowa'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('MA', 'Massachusetts'), ('MD', 'Maryland'), ('ME', 'Maine'), ('MH', 'Marshall Islands'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MO', 'Missouri'), ('MP', 'Northern Mariana Islands'), ('MS', 'Mississippi'), ('MT', 'Montana'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NE', 'Nebraska'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NV', 'Nevada'), ('NY', 'New York'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('PW', 'Palau'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VA', 'Virginia'), ('VI', 'U.S. Virgin Islands'), ('VT', 'Vermont'), ('WA', 'Washington'), ('WI', 'Wisconsin'), ('WV', 'West Virginia'), ('WY', 'Wyoming')], max_length=16)),
                ('emergency_contact_address_zip', models.CharField(max_length=10)),
                ('emergency_contact_home_phone', models.CharField(max_length=16)),
                ('emergency_contact_cell_phone', models.CharField(blank=True, max_length=16, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical student profile',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStudentAvailability',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.programregistration')),
                ('time_slot', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.timeslot')),
            ],
            options={
                'verbose_name': 'historical student availability',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgramTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('tag', models.CharField(max_length=256)),
                ('tag_category', models.CharField(choices=[('other', 'Other')], default='other', max_length=128)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical program tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgramStage',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=256)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
                ('_order', models.IntegerField(editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.program')),
            ],
            options={
                'verbose_name': 'historical program stage',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgramRegistrationStep',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('step_key', models.CharField(choices=[('verify_profile', 'Verify Profile Information'), ('submit_waivers', 'Submit Waivers'), ('time_availability', 'Time Availability'), ('lottery_preferences', 'Lottery Preferences'), ('submit_registration', 'Submit Registration'), ('view_assigned_courses', 'Confirm Assigned Courses'), ('edit_assigned_courses', 'Edit Assigned Courses'), ('pay_program_fees', 'Payment'), ('complete_surveys', 'Complete Surveys')], max_length=256)),
                ('required_for_stage_completion', models.BooleanField(default=True)),
                ('display_after_completion', models.BooleanField(default=True)),
                ('allow_changes_after_completion', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program_stage', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.programstage')),
            ],
            options={
                'verbose_name': 'historical program registration step',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgramRegistration',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('allow_early_registration_after', models.DateTimeField(null=True)),
                ('allow_late_registration_until', models.DateTimeField(null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.program')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical program registration',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgramConfiguration',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('saved_as_preset', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical program configuration',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgram',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=512)),
                ('program_type', models.CharField(blank=True, choices=[('splash', 'Splash'), ('spark', 'Spark'), ('hssp', 'HSSP'), ('cascade', 'Cascade')], max_length=128, null=True)),
                ('min_grade_level', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th'), (5, '5th'), (6, '6th'), (7, '7th'), (8, '8th'), (9, '9th'), (10, '10th'), (11, '11th'), (12, '12th')], default=7)),
                ('max_grade_level', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th'), (5, '5th'), (6, '6th'), (7, '7th'), (8, '8th'), (9, '9th'), (10, '10th'), (11, '11th'), (12, '12th')], default=12)),
                ('description', models.TextField(null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('number_of_weeks', models.IntegerField()),
                ('time_block_minutes', models.IntegerField(default=30)),
                ('archive_on', models.DateTimeField()),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program_configuration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.programconfiguration')),
            ],
            options={
                'verbose_name': 'historical program',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPreferenceEntryRound',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('title', models.CharField(blank=True, max_length=512, null=True)),
                ('help_text', models.TextField()),
                ('group_sections_by_course', models.BooleanField(default=False)),
                ('applied_category_filter', models.CharField(blank=True, max_length=512, null=True)),
                ('_order', models.IntegerField(editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program_configuration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.programconfiguration')),
            ],
            options={
                'verbose_name': 'historical preference entry round',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPreferenceEntryCategory',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('tag', models.CharField(max_length=512)),
                ('pre_add_display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('post_add_display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('help_text', models.TextField()),
                ('max_count', models.IntegerField(blank=True, null=True)),
                ('min_count', models.IntegerField(blank=True, null=True)),
                ('has_integer_value', models.BooleanField(default=False)),
                ('max_value', models.IntegerField(blank=True, null=True)),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('max_value_sum', models.IntegerField(blank=True, null=True)),
                ('min_value_sum', models.IntegerField(blank=True, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('preference_entry_round', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.preferenceentryround')),
            ],
            options={
                'verbose_name': 'historical preference entry category',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCourseTeacher',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('is_course_creator', models.BooleanField()),
                ('confirmed_on', models.DateTimeField(null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('course', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.course')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('teacher_registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.teacherregistration')),
            ],
            options={
                'verbose_name': 'historical course teacher',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCourseTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('tag', models.CharField(max_length=256)),
                ('display_name', models.CharField(blank=True, max_length=256, null=True)),
                ('tag_category', models.CharField(choices=[('course_category', 'Course Category'), ('other', 'Other')], default='other', max_length=128)),
                ('editable_by_teachers', models.BooleanField()),
                ('viewable_by_teachers', models.BooleanField()),
                ('viewable_by_students', models.BooleanField()),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical course tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCourseSection',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('display_id', models.IntegerField()),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('course', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.course')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical course section',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCourse',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=2048, verbose_name='Class title')),
                ('display_id', models.BigIntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(help_text='A description of the class that will be shown to students.')),
                ('max_section_size', models.IntegerField(verbose_name='How many students can a single section include?')),
                ('max_sections', models.IntegerField(default=1, verbose_name='How many enrollment sections are you willing to teach?')),
                ('time_slots_per_session', models.IntegerField(default=2, verbose_name='How many time slots is each session of the class?')),
                ('number_of_weeks', models.IntegerField(default=1, verbose_name='How many weeks will this class last?')),
                ('sessions_per_week', models.IntegerField(default=1, help_text='If you would like to meet multiple times per week, please describe why in the comments.', verbose_name='How often will this class meet per week?')),
                ('prerequisites', models.TextField(blank=True, default='None', help_text='Describe the recommended prerequisites for this class.')),
                ('min_grade_level', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th'), (5, '5th'), (6, '6th'), (7, '7th'), (8, '8th'), (9, '9th'), (10, '10th'), (11, '11th'), (12, '12th')], default=7)),
                ('max_grade_level', models.IntegerField(choices=[(1, '1st'), (2, '2nd'), (3, '3rd'), (4, '4th'), (5, '5th'), (6, '6th'), (7, '7th'), (8, '8th'), (9, '9th'), (10, '10th'), (11, '11th'), (12, '12th')], default=12)),
                ('difficulty', models.IntegerField(choices=[(1, 'Easy'), (2, 'Moderate'), (3, 'Challenging')], default=1)),
                ('status', models.CharField(choices=[('unreviewed', 'Unreviewed'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('hidden', 'Hidden')], default='unreviewed', max_length=32)),
                ('teacher_notes', models.TextField(blank=True, help_text='Notes for admin review - leave blank if none', null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('planned_purchases', models.TextField(blank=True, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.program')),
            ],
            options={
                'verbose_name': 'historical course',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompletedTeacherRegistrationStep',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('completed_on', models.DateTimeField()),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.teacherregistration')),
                ('step', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.teacherprogramregistrationstep')),
            ],
            options={
                'verbose_name': 'historical completed teacher registration step',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompletedRegistrationStep',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('completed_on', models.DateTimeField()),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.programregistration')),
                ('step', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.programregistrationstep')),
            ],
            options={
                'verbose_name': 'historical completed registration step',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClassroomTimeSlot',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('classroom', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.classroom')),
                ('course_section', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.coursesection')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('time_slot', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.timeslot')),
            ],
            options={
                'verbose_name': 'historical classroom time slot',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClassroomTag',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('tag', models.CharField(max_length=256)),
                ('tag_category', models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], default='other', max_length=128)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical classroom tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClassroomConstraint',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('require_all_tags_same_category', models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], max_length=128, null=True)),
                ('require_all_tags_different_category', models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], max_length=128, null=True)),
                ('constraint', models.CharField(max_length=256)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('required_classroom_tag', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.classroomtag')),
            ],
            options={
                'verbose_name': 'historical classroom constraint',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClassroom',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('max_occupants', models.IntegerField()),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical classroom',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClassRegistration',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('created_by_lottery', models.BooleanField()),
                ('confirmed_on', models.DateTimeField(null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('course_section', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.coursesection')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program_registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.programregistration')),
            ],
            options={
                'verbose_name': 'historical class registration',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalClassPreference',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('value', models.IntegerField(null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.preferenceentrycategory')),
                ('course_section', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.coursesection')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('registration', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.programregistration')),
            ],
            options={
                'verbose_name': 'historical class preference',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CourseTeacher',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('is_course_creator', models.BooleanField()),
                ('confirmed_on', models.DateTimeField(null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teachers', to='esp.course')),
                ('teacher_registration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='courses', to='esp.teacherregistration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseTag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('tag', models.CharField(max_length=256)),
                ('display_name', models.CharField(blank=True, max_length=256, null=True)),
                ('tag_category', models.CharField(choices=[('course_category', 'Course Category'), ('other', 'Other')], default='other', max_length=128)),
                ('editable_by_teachers', models.BooleanField()),
                ('viewable_by_teachers', models.BooleanField()),
                ('viewable_by_students', models.BooleanField()),
                ('courses', models.ManyToManyField(blank=True, related_name='tags', to='esp.Course')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='course',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='courses', to='esp.program'),
        ),
        migrations.CreateModel(
            name='CompletedTeacherRegistrationStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('completed_on', models.DateTimeField()),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='completed_steps', to='esp.teacherregistration')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registrations', to='esp.teacherprogramregistrationstep')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompletedRegistrationStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('completed_on', models.DateTimeField()),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='completed_steps', to='esp.programregistration')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registrations', to='esp.programregistrationstep')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassroomTimeSlot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='esp.classroom')),
                ('course_section', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='time_slots', to='esp.coursesection')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='classrooms', to='esp.timeslot')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassroomConstraint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('require_all_tags_same_category', models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], max_length=128, null=True)),
                ('require_all_tags_different_category', models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], max_length=128, null=True)),
                ('constraint', models.CharField(max_length=256)),
                ('course', models.ManyToManyField(related_name='scheduling_constraints', to='esp.Course')),
                ('required_classroom_tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='scheduling_constraints', to='esp.classroomtag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassRegistration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('created_by_lottery', models.BooleanField()),
                ('confirmed_on', models.DateTimeField(null=True)),
                ('course_section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registrations', to='esp.coursesection')),
                ('program_registration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_registrations', to='esp.programregistration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('value', models.IntegerField(null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='preferences', to='esp.preferenceentrycategory')),
                ('course_section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='preferences', to='esp.coursesection')),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='preferences', to='esp.programregistration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('program_id', 'display_id')},
        ),
    ]
