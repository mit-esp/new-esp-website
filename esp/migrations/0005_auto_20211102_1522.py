# Generated by Django 3.2.7 on 2021-11-02 15:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('esp', '0004_auto_20211029_1529'),
    ]

    operations = [
        migrations.RenameModel(
            new_name='CourseSection',
            old_name='ClassSection',
        ),
        migrations.RenameModel(
            new_name='HistoricalCourseSection',
            old_name='HistoricalClassSection',
        ),
        migrations.AddField(
            model_name='course',
            name='number_of_weeks',
            field=models.IntegerField(default=1, verbose_name='How many weeks will this class last?'),
        ),
        migrations.AddField(
            model_name='course',
            name='sessions_per_week',
            field=models.IntegerField(default=1, help_text='If you would like to meet multiple times per week, please describe why in the comments.', verbose_name='How often will this class meet per week?'),
        ),
        migrations.AddField(
            model_name='course',
            name='time_slots_per_session',
            field=models.IntegerField(default=2, verbose_name='How many time slots is each session of the class?'),
        ),
        migrations.AddField(
            model_name='historicalcourse',
            name='number_of_weeks',
            field=models.IntegerField(default=1, verbose_name='How many weeks will this class last?'),
        ),
        migrations.AddField(
            model_name='historicalcourse',
            name='sessions_per_week',
            field=models.IntegerField(default=1, help_text='If you would like to meet multiple times per week, please describe why in the comments.', verbose_name='How often will this class meet per week?'),
        ),
        migrations.AddField(
            model_name='historicalcourse',
            name='time_slots_per_session',
            field=models.IntegerField(default=2, verbose_name='How many time slots is each session of the class?'),
        ),
        migrations.AddField(
            model_name='historicalprogram',
            name='number_of_weeks',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicalprogram',
            name='time_block_minutes',
            field=models.IntegerField(default=30),
        ),
        migrations.AddField(
            model_name='program',
            name='number_of_weeks',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='program',
            name='time_block_minutes',
            field=models.IntegerField(default=30),
        ),
        migrations.AlterField(
            model_name='classroomconstraint',
            name='require_all_tags_different_category',
            field=models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='classroomconstraint',
            name='require_all_tags_same_category',
            field=models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='classroomtag',
            name='tag_category',
            field=models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], default='other', max_length=128),
        ),
        migrations.AlterField(
            model_name='course',
            name='max_sections',
            field=models.IntegerField(default=1, verbose_name='How many enrollment sections are you willing to teach?'),
        ),
        migrations.AlterField(
            model_name='historicalclassroomconstraint',
            name='require_all_tags_different_category',
            field=models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='historicalclassroomconstraint',
            name='require_all_tags_same_category',
            field=models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], max_length=128, null=True),
        ),
        migrations.AlterField(
            model_name='historicalclassroomtag',
            name='tag_category',
            field=models.CharField(choices=[('location', 'Location'), ('resource', 'Resource'), ('other', 'Other')], default='other', max_length=128),
        ),
        migrations.AlterField(
            model_name='historicalcourse',
            name='max_sections',
            field=models.IntegerField(default=1, verbose_name='How many enrollment sections are you willing to teach?'),
        ),
        migrations.AlterField(
            model_name='historicalteacherprogramregistrationstep',
            name='step_key',
            field=models.CharField(choices=[('teacher_verify_profile', 'Verify Profile'), ('teacher_submit_waiver', 'Submit Waivers'), ('teacher_minors_policy', 'Submit Minors Policy Acknowledgement'), ('teacher_time_availability', 'Time Availability'), ('teacher_submit_courses', 'Submit Courses'), ('teacher_confirm_course_schedule', 'Confirm Course Schedule')], max_length=128),
        ),
        migrations.AlterField(
            model_name='teacherprogramregistrationstep',
            name='step_key',
            field=models.CharField(choices=[('teacher_verify_profile', 'Verify Profile'), ('teacher_submit_waiver', 'Submit Waivers'), ('teacher_minors_policy', 'Submit Minors Policy Acknowledgement'), ('teacher_time_availability', 'Time Availability'), ('teacher_submit_courses', 'Submit Courses'), ('teacher_confirm_course_schedule', 'Confirm Course Schedule')], max_length=128),
        ),
    ]
