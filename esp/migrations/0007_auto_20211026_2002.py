# Generated by Django 3.2.7 on 2021-10-26 20:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('esp', '0006_auto_20211025_1552'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompletedTeacherRegistrationStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('completed_on', models.DateTimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalCompletedTeacherRegistrationStep',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('completed_on', models.DateTimeField()),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical completed teacher registration step',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTeacherProgramRegistrationStep',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('updated_on', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('step_key', models.CharField(choices=[('teacher_verify_profile', 'Verify Profile'), ('teacher_submit_waiver', 'Submit Waivers'), ('teacher_minors_policy', 'Submit Minors Policy Acknowledgement'), ('teacher_time_availability', 'Time Availability'), ('teacher_submit_courses', 'Submit Courses'), ('teacher_edit_courses', 'Edit Courses'), ('teacher_confirm_course_schedule', 'Confirm Course Schedule')], max_length=128)),
                ('display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('access_start_date', models.DateTimeField()),
                ('access_end_date', models.DateTimeField()),
                ('required_for_next_step', models.BooleanField(default=True)),
                ('display_after_completion', models.BooleanField(default=True)),
                ('allow_changes_after_completion', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('_order', models.IntegerField(editable=False)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical teacher program registration step',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='TeacherProgramRegistrationStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False, editable=False)),
                ('step_key', models.CharField(choices=[('teacher_verify_profile', 'Verify Profile'), ('teacher_submit_waiver', 'Submit Waivers'), ('teacher_minors_policy', 'Submit Minors Policy Acknowledgement'), ('teacher_time_availability', 'Time Availability'), ('teacher_submit_courses', 'Submit Courses'), ('teacher_edit_courses', 'Edit Courses'), ('teacher_confirm_course_schedule', 'Confirm Course Schedule')], max_length=128)),
                ('display_name', models.CharField(blank=True, max_length=512, null=True)),
                ('access_start_date', models.DateTimeField()),
                ('access_end_date', models.DateTimeField()),
                ('required_for_next_step', models.BooleanField(default=True)),
                ('display_after_completion', models.BooleanField(default=True)),
                ('allow_changes_after_completion', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveConstraint(
            model_name='programregistrationstep',
            name='unique_program_stage_step',
        ),
        migrations.RenameField(
            model_name='course',
            old_name='notes',
            new_name='admin_notes',
        ),
        migrations.RenameField(
            model_name='historicalcourse',
            old_name='notes',
            new_name='admin_notes',
        ),
        migrations.RenameField(
            model_name='historicalprogram',
            old_name='hide_from_students_on',
            new_name='archive_on',
        ),
        migrations.RenameField(
            model_name='program',
            old_name='hide_from_students_on',
            new_name='archive_on',
        ),
        migrations.RemoveField(
            model_name='historicalcourse',
            name='max_size',
        ),
        migrations.RemoveField(
            model_name='historicalprogram',
            name='hide_from_teachers_on',
        ),
        migrations.RemoveField(
            model_name='historicalprogram',
            name='hide_from_volunteers_on',
        ),
        migrations.RemoveField(
            model_name='historicalprogram',
            name='show_to_students_on',
        ),
        migrations.RemoveField(
            model_name='historicalprogram',
            name='show_to_teachers_on',
        ),
        migrations.RemoveField(
            model_name='historicalprogram',
            name='show_to_volunteers_on',
        ),
        migrations.RemoveField(
            model_name='historicalprogramstage',
            name='manually_activated',
        ),
        migrations.RemoveField(
            model_name='historicalprogramstage',
            name='manually_hidden',
        ),
        migrations.RemoveField(
            model_name='program',
            name='hide_from_teachers_on',
        ),
        migrations.RemoveField(
            model_name='program',
            name='hide_from_volunteers_on',
        ),
        migrations.RemoveField(
            model_name='program',
            name='show_to_students_on',
        ),
        migrations.RemoveField(
            model_name='program',
            name='show_to_teachers_on',
        ),
        migrations.RemoveField(
            model_name='program',
            name='show_to_volunteers_on',
        ),
        migrations.RemoveField(
            model_name='programstage',
            name='manually_activated',
        ),
        migrations.RemoveField(
            model_name='programstage',
            name='manually_hidden',
        ),
        migrations.AddField(
            model_name='course',
            name='max_section_size',
            field=models.IntegerField(default=0, verbose_name='How many students can a single section include?'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='max_sections',
            field=models.IntegerField(default=1, verbose_name='How many sections are you willing to teach?'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='teacher_notes',
            field=models.TextField(blank=True, help_text='Notes for admin review - leave blank if none', null=True),
        ),
        migrations.AddField(
            model_name='historicalcourse',
            name='max_section_size',
            field=models.IntegerField(default=0, verbose_name='How many students can a single section include?'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicalcourse',
            name='max_sections',
            field=models.IntegerField(default=1, verbose_name='How many sections are you willing to teach?'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='historicalcourse',
            name='teacher_notes',
            field=models.TextField(blank=True, help_text='Notes for admin review - leave blank if none', null=True),
        ),
        migrations.AddField(
            model_name='historicalprogramregistrationstep',
            name='allow_changes_after_completion',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='historicalprogramregistrationstep',
            name='display_after_completion',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='historicalteacherregistration',
            name='allow_early_registration_after',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='historicalteacherregistration',
            name='allow_late_registration_until',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='programregistrationstep',
            name='allow_changes_after_completion',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='programregistrationstep',
            name='display_after_completion',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='teacherregistration',
            name='allow_early_registration_after',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='teacherregistration',
            name='allow_late_registration_until',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='description',
            field=models.TextField(help_text='A description of the class that will be shown to students.'),
        ),
        migrations.AlterField(
            model_name='course',
            name='duration_minutes',
            field=models.IntegerField(default=60, help_text='We will attempt to accommodate this within the constraints of the program time blocks.', verbose_name='How long (in minutes) should this class be?'),
        ),
        migrations.AlterField(
            model_name='course',
            name='end_date',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='prerequisites',
            field=models.TextField(blank=True, default='None', help_text='Describe the recommended prerequisites for this class.'),
        ),
        migrations.AlterField(
            model_name='course',
            name='start_date',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='historicalcourse',
            name='description',
            field=models.TextField(help_text='A description of the class that will be shown to students.'),
        ),
        migrations.AlterField(
            model_name='historicalcourse',
            name='duration_minutes',
            field=models.IntegerField(default=60, help_text='We will attempt to accommodate this within the constraints of the program time blocks.', verbose_name='How long (in minutes) should this class be?'),
        ),
        migrations.AlterField(
            model_name='historicalcourse',
            name='end_date',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='historicalcourse',
            name='prerequisites',
            field=models.TextField(blank=True, default='None', help_text='Describe the recommended prerequisites for this class.'),
        ),
        migrations.AlterField(
            model_name='historicalcourse',
            name='start_date',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='historicalprogramregistrationstep',
            name='step_key',
            field=models.CharField(choices=[('verify_profile', 'Verify Profile Information'), ('submit_waivers', 'Submit Waivers'), ('time_availability', 'Time Availability'), ('lottery_preferences', 'Lottery Preferences'), ('submit_registration', 'Submit Registration'), ('view_assigned_courses', 'View Assigned Courses'), ('edit_assigned_courses', 'Edit Assigned Courses'), ('pay_program_fees', 'Payment'), ('complete_surveys', 'Complete Surveys')], max_length=256),
        ),
        migrations.AlterField(
            model_name='programregistrationstep',
            name='step_key',
            field=models.CharField(choices=[('verify_profile', 'Verify Profile Information'), ('submit_waivers', 'Submit Waivers'), ('time_availability', 'Time Availability'), ('lottery_preferences', 'Lottery Preferences'), ('submit_registration', 'Submit Registration'), ('view_assigned_courses', 'View Assigned Courses'), ('edit_assigned_courses', 'Edit Assigned Courses'), ('pay_program_fees', 'Payment'), ('complete_surveys', 'Complete Surveys')], max_length=256),
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('program_id', 'display_id')},
        ),
        migrations.AlterUniqueTogether(
            name='programregistration',
            unique_together={('program_id', 'user_id')},
        ),
        migrations.AlterUniqueTogether(
            name='programregistrationstep',
            unique_together={('program_stage_id', 'step_key')},
        ),
        migrations.AlterUniqueTogether(
            name='teacherregistration',
            unique_together={('program_id', 'user_id')},
        ),
        migrations.AddField(
            model_name='teacherprogramregistrationstep',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='teacher_registration_steps', to='esp.program'),
        ),
        migrations.AddField(
            model_name='historicalteacherprogramregistrationstep',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalteacherprogramregistrationstep',
            name='program',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.program'),
        ),
        migrations.AddField(
            model_name='historicalcompletedteacherregistrationstep',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcompletedteacherregistrationstep',
            name='registration',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.teacherregistration'),
        ),
        migrations.AddField(
            model_name='historicalcompletedteacherregistrationstep',
            name='step',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='esp.teacherprogramregistrationstep'),
        ),
        migrations.AddField(
            model_name='completedteacherregistrationstep',
            name='registration',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='completed_steps', to='esp.teacherregistration'),
        ),
        migrations.AddField(
            model_name='completedteacherregistrationstep',
            name='step',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registrations', to='esp.teacherprogramregistrationstep'),
        ),
        migrations.RemoveField(
            model_name='course',
            name='max_size',
        ),
        migrations.AlterOrderWithRespectTo(
            name='teacherprogramregistrationstep',
            order_with_respect_to='program',
        ),
        migrations.AlterUniqueTogether(
            name='teacherprogramregistrationstep',
            unique_together={('program_id', 'step_key')},
        ),
    ]
